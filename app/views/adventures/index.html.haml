!!!
%html
  %head
    %script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js", :type => "text/javascript"}

    = javascript_include_tag "application"
    %script{:src => "https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js", :type => "text/javascript"}


    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:charset => "utf-8"}/
    %script{:src => "https://code.jquery.com/jquery-3.1.1.min.js"}
    %link{:href => "https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.2/semantic.min.css", :rel => "stylesheet", :type => "text/css"}/
    %script{:src => "https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"}
    %script{:src => "https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.4/semantic.min.js"}
    %script{:src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyBjrep_jwH3Ej6ZwWhRuoDILRNt2RpElqA&libraries=places"}
    %link{:href => "//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css", :rel => "stylesheet"}/
    %script{:src => "//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"}
    %script{:src => "//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"}
    %link{:href => "//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css", :rel => "stylesheet"}/
    %script{:src => "https://code.jquery.com/jquery-1.12.4.js"}
    %meta{:content => "initial-scale=1.0, user-scalable=no", :name => "viewport"}/
    %link{:href => "//cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.7.5/css/bootstrap-select.min.css", :media => "screen", :rel => "stylesheet", :type => "text/css"}/
    :javascript

      $('#select')
        .dropdown()
      ;
      function myFunction() {
          var input, filter, ul, li, a, i;
          input = document.getElementById("myInput");
          filter = input.value.toUpperCase();
          ul = document.getElementById("myUL");
          li = ul.getElementsByTagName("li");
          for (i = 0; i < li.length; i++) {
              a = li[i].getElementsByTagName("a")[0];
              if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                  li[i].style.display = "";
              } else {
                  li[i].style.display = "none";
              }
          }
      }

      var arr= ["test", "apple", "orange"];
      $('#myInput').autocomplete({
        lookup: arr
      });

      var app = angular.module('app', ['ui.select']);

      app.controller("myCtrl", function () {
          vm = this;
          vm.isLoaded = false;
          vm.values = [{
              'key': 22,
              'value': 'Kevin'
          }, {
              'key': 24,
              'value': 'Fiona'
          }];
          vm.selected;
      });

    :css
      .initiallyHiddenBlock {
          display: none;
      }
      .initiallyHiddenBlock2 {
          display: none;
      }
      .initiallyHiddenBlock3 {
          display: none;
      }
      .initiallyHiddenBlock4 {
          display: none;
      }

      .a.variable {
        color: #1d4e89;
        clear:left
      }
      .calendar {
        position: relative;
        top: 10px;
        left: 470px;
        z-index:100;
      }
      .inline {
        color: #1d4e89;
        display: inline;
        margin-right: 6px;
      }

      body {
        background-color: white;
      }
      .new_adventure {
        position: relative;
        left: 350px;
        width: 660px;
        height: 230px;
        background-color: white;
        border: 1px solid black;
        padding: 10px;
        margin: 10px;
      }
      .singularadventure {
        position: relative;
        top: 20px;
        left: 350px;
        width: 660px;
        height: auto;
        background-color: #bee5fb;
        border: 1px solid black;
        padding: 10px;
        margin: 10px;
        font-family: 'pproxima_nova_ltthin', sans-serif;
      }
      .singularadventureontoggle {
        position: relative;
        top: 20px;
        left: 350px;
        width: 660px;
        height: 140px;
        background-color: #bee5fb;
        border: 1px solid black;
        padding: 10px;
        margin: 10px;
        font-family: 'pproxima_nova_ltthin', sans-serif;
      }


      .avatar {
        position: relative;
        top: -35px;
      }

      .descriptionsecondary {
        position: relative;
        left: 38px;
        top: -68px;
        font-family: 'pproxima_nova_ltthin', sans-serif;
        font-size: 90%;
      }
      .descriptionpart {
        position: relative;
        top: -127px;
        border: 1px solid black;
        height: 30px;
        width: 100%;
        background-color: white;
        padding: 5px 10px;
      }
      .adventureprice {
        position: relative;
        top: -99px;
        right: -518px;
        border: 1px solid black;
        height: 30px;
        width: 120px;
        text-align: center;
        padding: 6px 10px;
        font-family: 'pproxima_nova_ltthin', sans-serif;
        font-size: 115%;
      }

      .detailslineone {
        position: relative;
        top: -136px;
        width: 315px;
        border:none;
        border-top:1px black;
        color: black;
        background-color: black;
        height:1px;
        z-index:99;
      }

      .detailslinetwo {
        position: relative;
        top: -137px;
        right: -322px;
        width: 316px;
        border:none;
        border-top:1px black;
        color: black;
        background-color: black;
        height:1px;
        z-index:99;
      }

      .initiallyHiddenBlock {
        position: relative;
        top: -117px;
        font-family: 'pproxima_nova_ltthin', sans-serif;
        font-size: 115%;
        width: 100%;
        background-color: white;
        border: 1px solid black;
        padding: 5px 10px;
        margin-bottom: 10px;
        z-index:100;
      }

      .showHiddenBlock {
        position: relative;
        cursor: pointer;
        top: -124px;
        right: -310px;
        z-index:99;
      }
      .editdeletecover {
        position: relative;
        right: -702px;
        top: 89px;
        background-color: white;
        position: relative;
        height: 35px;
        width: 70px;
        z-index:99;
      }

      .editdeletecoverremoved {
        position: relative;
        right: -655px;
        top: 89px;
        background-color: white;
        z-index:101;
        height: 35px;
        width: 70px;
      }
      .editdelete {
        position: relative;
        top: -40px;
        right: -650px;
        height: 35px;
        width: 70px;
        z-index:100;
        text-align: center;
      }

      .showHiddenBlock2 {
        position: relative;
        top: -157px;
        left: 130px;
        text-align: center;
        cursor: pointer;
        height: 30px;
        width: 120px;
        padding: 5px 10px;
        margin-bottom: 10px;
        font-family: 'pproxima_nova_ltthin', sans-serif;
        font-size: 90%;
        z-index:99;
      }
      .showHiddenBlock2:hover {
        background-color: #7FCCF7;
      }
      .noanswers {
        position: relative;
        top: -136px;
        left: 130px;
        text-align: center;
        cursor: pointer;
        height: 30px;
        width: 120px;
        padding: 5px 10px;
        font-family: 'pproxima_nova_ltthin', sans-serif;
        font-size: 90%;
        margin-bottom: 10px;
        z-index:99;
      }
      .noanswers:hover {
        background-color: #7FCCF7;
      }
      .showHiddenBlock3 {
        text-align: center;
        position: relative;
        cursor: pointer;
        top: -132px;
        right: -611px;
        width: 0px;
        z-index:99;
      }

      .showHiddenBlock4 {
        position: relative;
        top: -197px;
        text-align: center;
        cursor: pointer;
        height: 30px;
        width: 120px;
        border: 1px solid black;
        padding: 5px 10px;
        margin-bottom: 10px;
      }
      .nodetails {
        position: relative;
        top: -178px;
        text-align: center;
        height: 30px;
        cursor: pointer;
        width: 120px;
        border: 1px solid black;
        padding: 5px 10px;
        margin-bottom: 10px;
      }

      .showHiddenBlock4:hover {
        background-color: #7FCCF7;
      }

      .nodetails:hover {
        background-color: #7FCCF7;
      }

      .initiallyHiddenBlock3 {
        position: relative;
        top: -44px;
        right: -800px;
        font-family: 'pproxima_nova_ltthin', sans-serif;
        font-size: 115%;
        width: 120px;
        height: 30px;
        background-color: white;
        border: 1px solid black;
        padding: 5px 10px;
        margin-bottom: 10px;
        z-index:100;
        text-align: center;
      }

      .answerline {
        position: relative;
        top: -178px;
        width: 640px;
        border:none;
        border-top:1px black;
        color: black;
        background-color: black;
        height:1px;
        z-index:99;
      }
      .answeravatar {
        position: relative;
        top: -133px;
      }
      #advisetext {
        position: relative;
        height: 30px;
        top: -202px;
        left: 38px;
        width: 94.25%;
        padding: 5px 10px;
        -webkit-appearance: none;
        margin: 5px 0;
        display: inline-block;
        border: 1px solid black;
        border-radius: 0px;
        box-sizing: border-box;
        color: black;
        resize: none;
        font-family: 'pproxima_nova_ltthin', sans-serif;
        font-size: 90%;
      }
      .createcomment {
        position: relative;
        top: -202px;
        left: 518px;
        text-align: center;
        cursor: pointer;
        height: 30px;
        width: 120px;
        border: 1px solid black;
        background-color: #bee5fb;
        padding: 5px 10px;
        margin-bottom: 10px;
      }
      .createcomment:hover {
        background-color: #7FCCF7;
      }
      .iftherearedetails {
        position: relative;
        top: -20px;
      }



%head

  :css
    /* Always set the map height explicitly to define the size of the div
    * element that contains the map. */
    #map {
      height: 100%;
    }
  %link{:href => "https://fonts.googleapis.com/css?family=Roboto:300,400,500", :rel => "stylesheet", :type => "text/css"}/
  :css
    #autocomplete {
      position: relative;
      padding-top: 0px;
      padding-left: 10px;
      top: -110px;
      left: 260px;
      height: 30px;
      width: 120px;
      color: black;
    }
    .label {
      text-align: right;
      font-weight: bold;
      width: 100px;
      color: #303030;
    }
    #inputtext {
      position: relative;
      height: 30px;
      top: -126px;
      width: 100%;
      padding: 5px 10px;
      -webkit-appearance: none;
      margin: 5px 0;
      display: inline-block;
      border: 1px solid black;
      border-radius: 0px;
      box-sizing: border-box;
      color: black;
      resize: none;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      font-size: 90%;
      }
    #inputtextDetails {
      position: relative;
      height: 90px;
      top: -141px;
      width: 100%;
      padding: 5px 10px;
      -webkit-appearance: none;
      margin: 5px 0;
      display: inline-block;
      border: 1px solid black;
      border-radius: 0px;
      box-sizing: border-box;
      color: black;
      resize: none;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      font-size: 90%;
    }
    .moneyinput {
      position: relative;
      z-index:100;
      height: 30px;
      top: -160px;
      width: 120px;
      padding: 5px 15px;
      -webkit-appearance: none;
      margin: 5px 0;
      display: inline-block;
      border: 1px solid black;
      border-radius: 0px;
      box-sizing: border-box;
      color: black;
      resize: none;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      font-size: 90%;
    }
    .dollarsign {
      width: 10px;
      position: relative;
      height: 30px;
      z-index:100;
      top: -206px;
      left: 5px;
    }
    #datepicker {
      position: relative;
      top: -10px;
      z-index: 100px;
      right: 80px;
      width: 120px;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      font-size: 90%;
      height: 30px;
      color: black;
    }
    .line {
      position: relative;
      top: 10px;
      left: 360px;
      width: 660px;
      border:none;
      border-top:1px dashed black;
      color:#fff;
      background-color:#fff;
      height:1px;
    }

    input[type=submit], input[type=text], input[type=file], input[type=textArea] {
      font-family: 'pproxima_nova_ltthin', sans-serif;
      -webkit-appearance: none;
      border-radius: 0;
      border: 1px solid black;
    }
    ::-webkit-input-placeholder { /* Chrome/Opera/Safari */
      color: black;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      font-size: 76%;
    }
    ::-moz-placeholder { /* Firefox 19+ */
      color: black;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      font-size: 76%;
    }
    :-ms-input-placeholder { /* IE 10+ */
      color: black;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      font-size: 76%;
    }
    :-moz-placeholder { /* Firefox 18- */
      color: black;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      font-size: 76%;
    }
    .createadventurebutton {
      background-color: #4CAF50;
      border: none;
      color: white;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 12px;
      margin: 4px 2px;
      cursor: pointer;
      position: relative;
      top: -259px;
      right: -514px;
      width: 120px;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      height: 30px;
    }

    .button4 {
      position: relative; !important;
      top: 15px; !important;
      right: -400px; !important;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      color: #303030;!important;
      border: none; !important;
      border-top-right-radius: 5px; !important;
      border-bottom-right-radius: 5px; !important;
      height: 40px; !important;
      width: 70px; !important;
    }

    .button4:hover {
        background-color: #e7e7e7; !important;
    }

    .container-1 .styled{
      position: relative;
      left: 360px;
      top: 20px;
      z-index:100;
      height: 30px;
      width: 120px;
      padding: 5px 15px;
      -webkit-appearance: none;
      margin: 5px 0;
      display: inline-block;
      border: 1px solid black;
      border-radius: 0px;
      box-sizing: border-box;
      color: black;
      resize: none;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      font-size: 90%;
    }

    .container-1 .styled:hover, .container-1 .styled:focus, .container-1 .styled:active{
      outline:none; !important;
      background-color: #e7e7e7; !important;
    }

%body
  :css
    .btn-new {
      -webkit-appearance: none;
      border-radius: 0;
      border: 1px solid black;
      color: black;
      font-family: 'pproxima_nova_ltthin', sans-serif;
      height: 30px;
      font-size: 76%;
      outline: none;
    }
    .selectbuttonone {
      position: relative;
      top: -30px;
    }
    .selectbuttontwo {
      position: relative;
      top: -60px;
      left: 130px;
    }
  .new_adventure
    = form_tag adventures_path, :method => :post do
      %script{:src => "//cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.7.5/js/bootstrap-select.min.js"}
      %script{:src => "https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/jquery-ui.min.js", :type => "text/javascript"}
      %script{:src => "https://code.jquery.com/ui/1.12.1/jquery-ui.js"}
      :javascript
                jQuery(function($){ // wait until the DOM is ready
                    $("#datepicker").datepicker({ dateFormat: 'M dd, yy' });
                });
      .calendar
        %input#datepicker{:type => "text", :name => "adventure[adventure_date]", :start_year => Date.today.year, :placeholder => "CHOOSE DATE"}/
      :javascript
        $(document).ready(function() {
                       $('.selectpicker').selectpicker();
                      });
      .selectbuttonone
        %select.selectpicker{:name => "adventure[action_adventure]", "data-style" => "btn-new", "data-width" => "120px"}
          %option{:value => "action"} I NEED ACTION
          %option{:value => "adventure"} I NEED ADVISE
      .selectbuttontwo
        %select.selectpicker{:name => "adventure[number_of_people]", "data-style" => "btn-new", "data-width" => "120px"}
          %option{:value => "Only me"} ONLY ME
          %option{:value => "+1"} ME +1
          %option{:value => "+2"} ME +2
          %option{:value => "+3"} ME +3
          %option{:value => "+4"} ME +4
          %option{:value => "+5"} ME +5
          %option{:value => "me and more than 5 others"} ME AND 5 OTHERS

      .inline
        #locationField
          %input#autocomplete{:onfocus => "geolocate()", "data-style" => "autocomp", :placeholder => "WHAT CITY", :type => "text"}/
          %input#locality.field{:name => "adventure[city]", :type =>"hidden", :disabled => "false"}/
          %input#country.field{:name => "adventure[country]", :type => "hidden", :disabled => "true"}/
          %input#administrative_area_level_1.field{:type => "hidden", :disabled => "true"}/


        :javascript
          // This example displays an address form, using the autocomplete feature
          // of the Google Places API to help users fill in the information.

          // This example requires the Places library. Include the libraries=places
          // parameter when you first load the API. For example:
          // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

          var placeSearch, autocomplete;
          var componentForm = {
            locality: 'long_name',
            administrative_area_level_1: 'short_name',
            country: 'long_name',
          };

          function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
              /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
              {types: ['geocode']});

            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
          }

          function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            for (var component in componentForm) {
              document.getElementById(component).value = '';
              document.getElementById(component).disabled = false;
            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
              var addressType = place.address_components[i].types[0];
              if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
                document.getElementById(addressType).value = val;
              }
            }
          }

          // Bias the autocomplete object to the user's geographical location,
          // as supplied by the browser's 'navigator.geolocation' object.
          function geolocate() {
            if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(function(position) {
                var geolocation = {
                  lat: position.coords.latitude,
                  lng: position.coords.longitude
                };
                var circle = new google.maps.Circle({
                  center: geolocation,
                  radius: position.coords.accuracy
                });
                autocomplete.setBounds(circle.getBounds());
              });
            }
          }
        %script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyBjrep_jwH3Ej6ZwWhRuoDILRNt2RpElqA&libraries=places&callback=initAutocomplete"}
      .inline

      %p
        = text_area :adventure, :description, :maxlength => "120", :id => "inputtext", :placeholder => "ASK LOCALS ANYTHING YOU WANT TO KNOW OR TO DO (E.G. \"WANT TO PET A TIGER\")                      MAX 120 SYMBOLS"
      %p
        = text_area :adventure, :details, :id => "inputtextDetails", :placeholder => "DETAILS. HERE YOU CAN WRITE ANY DETAILS AND REFINEMENTS YOU NEED. THERE IS NO LIMIT OF SYMBOLS HERE. "
        = hidden_field :adventure, :completed, value: false
      %p
        %input.moneyinput{:type => "float", :name => "adventure[price]", :value => "0"}/
        .dollarsign
          $
      %p
        %button.createadventurebutton SAVE CHANGES
.line
= search_form_for @search do |f|
  .box
    .container-1
      = f.text_field :city_cont, :placeholder => 'Anywhere', class: 'styled'
      %button.button.button4 Search
%script{:src => "https://code.jquery.com/jquery-3.1.1.min.js"}
%link{:href => "https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.2/semantic.min.css", :rel => "stylesheet", :type => "text/css"}/
%script{:src => "https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"}
%script{:src => "https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.4/semantic.min.js"}
%script{:src => "https://code.jquery.com/jquery-1.12.4.js"}
%script{:src => "https://code.jquery.com/ui/1.12.1/jquery-ui.js"}
:javascript
  var detailsvar = false;
  var answers = false;
  var advise = false;
  $(document).ready(function() {
      $('.showHiddenBlock').click(function() {
        detailsvar = !detailsvar;
        $(this).parent().children('.initiallyHiddenBlock').slideToggle(1000);
      });
  });

  $(document).ready(function() {
      $('.showHiddenBlock2').click(function() {
          answers = !answers;
          $(this).parent().children('.initiallyHiddenBlock2').slideToggle(1000);
      });
  });
    $(document).ready(function() {
      $('.noanswers').click(function() {
          answers = !answers;
          $(this).parent().children('.initiallyHiddenBlock2').slideToggle(1000);
      });
  });

  $(document).ready(function() {
      $('.showHiddenBlock4').click(function() {
          advise = !advise;
          $(this).parent().children('.initiallyHiddenBlock4').slideToggle(1000);
      });
  });
    $(document).ready(function() {
      $('.nodetails').click(function() {
          advise = !advise;
          $(this).parent().children('.initiallyHiddenBlock4').slideToggle(1000);
      });
  });

  $(document).ready(function() {
      $('.slideHideToggle').click(function() {
        $(this).parent().children('.HideShow').slideToggle(1000);
        });
  });
  $( function() {
    $( ".showHiddenBlock" ).on( "click", function() {
      if (answers == false && advise == false) {
        $(this).parent().parent().children( ".singularadventure" ).toggleClass( "singularadventureontoggle", 1000 );
      }
    });
  } );

  $( function() {
    $( ".showHiddenBlock2" ).on( "click", function() {
      if (detailsvar == false && advise == false) {
        $(this).parent().parent().children( ".singularadventure" ).toggleClass( "singularadventureontoggle", 1000 );
      }
    });
  } );
  $( function() {
    $( ".noanswers" ).on( "click", function() {
      if (detailsvar == false && advise == false) {
        $(this).parent().parent().children( ".singularadventure" ).toggleClass( "singularadventureontoggle", 1000 );
      }
    });
  } );

  $( function() {
    $( ".showHiddenBlock4" ).on( "click", function() {
      if (answers == false && detailsvar == false) {
        $(this).parent().parent().children( ".singularadventure" ).toggleClass( "singularadventureontoggle", 1000 );
      }
    });
  } );
    $( function() {
    $( ".nodetails" ).on( "click", function() {
      if (answers == false && detailsvar == false) {
        $(this).parent().parent().children( ".singularadventure" ).toggleClass( "singularadventureontoggle", 1000 );
      }
    });
  } );

  $( function() {
    $( ".showHiddenBlock3" ).on( "click", function() {
      $(this).parent().children( ".editdeletecover" ).toggleClass( "editdeletecoverremoved", 100 );
    });
  } );


- @adventures.sort {|a,b| b.created_at <=> a.created_at }.each do |ad|
  #myUL

    .singularadventure.singularadventureontoggle
      .editdeletecoverremoved.editdeletecover
      .avatar
      - if ad.user.avatar_url.to_s != ''
        %a.img.ui.circular.avatar.image{:href => user_path(ad.user.id)}
          %img{:src => ad.user.avatar_url.to_s}/
      - else
        %a.img.ui.circular.avatar.image{:href => user_path(ad.user.id)}
          = image_tag "logos/user.png"
      .descriptionsecondary
        #{link_to "#{ad.user.first_name}", user_path(ad.user.id)} from #{ad.user.city_of_residence} posted #{time_ago_in_words(ad.created_at)} ago
        %p needs #{ad.action_adventure} in #{ad.city},  #{ad.country} on #{ad.adventure_date.strftime("%B %d, %Y")}:
      .adventureprice
        - if ad.price != 0
          $#{ad.price}
        - else
          FREE
      .editdelete
        - if user_signed_in? && ad.completed != true
          - if ad.user.id == current_user.id
            #{link_to "EDIT", edit_adventure_path(ad)}
            #{link_to "DELETE", adventure_path(ad), :method => :delete}

      .descriptionpart
        #{ad.description}
      - if ad.details != ""
        .initiallyHiddenBlock
          #{ad.details}
        .showHiddenBlock
          %i.angle.down.icon
        .detailslineone
        .detailslinetwo
      .showHiddenBlock3
        = image_tag "logos/dots.png", width: '30px'
      - if ad.details != ""
        .showHiddenBlock2
          Other Answers(#{ad.comments.count})
      - else
        .noanswers
          Other Answers(#{ad.comments.count})
      .initiallyHiddenBlock2
        - ad.comments.each do |c|
          = render c
      - if user_signed_in?
        - if ad.user.id != current_user.id && ad.comments.find_by(:user_id =>current_user.id) == nil && ad.completed != true
          - if ad.details != ""
            .showHiddenBlock4
              ANSWER
          - else
            .nodetails
              ANSWER
          .initiallyHiddenBlock4
            - if ad.details != ""
              .iftherearedetails
                .answerline
                .answeravatar
                  - if current_user.avatar_url.to_s != ''
                    %a.img.ui.circular.avatar.image{:href => user_path(current_user.id)}
                      %img{:src => current_user.avatar_url.to_s}/
                  - else
                    %a.img.ui.circular.avatar.image{:href => user_path(current_user.id)}
                      = image_tag "logos/user.png"
                = form_for([ad,ad.comments.build]) do |f|
                  %p
                    = text_area :comment, :body, :id => "advisetext"
                    /- if current_user.capabilities
                    / %p
                    /   Choose which of your capabilities to include:
                    / %p
                    /   #{current_user.capabilities}
                    / %p
                    /   Any other relevant capabilities?
                    /- else
                    /%p
                    /  Any relevant capabilities?
                    /%p
                    /  = f.text_area :capabilities
                    /%p
                    /  = f.file_field :image, multiple:true
                    /%p
                    /.ui.toggle.checkbox.slideHideToggle
                    /  %input{:name => "public", :type => "checkbox"}/
                    /  %label Agree to #{ad.action_adventure}-seeker's offer
                    /.HideShow
                    /%p
                    /  = f.label :price, 'I would like to get'
                    /  = f.number_field :price, value: ad.price
                    /  instead
                    %button.createcomment
                      POST
            - else
              .answerline
              .answeravatar
                - if current_user.avatar_url.to_s != ''
                  %a.img.ui.circular.avatar.image{:href => user_path(current_user.id)}
                    %img{:src => current_user.avatar_url.to_s}/
                - else
                  %a.img.ui.circular.avatar.image{:href => user_path(current_user.id)}
                    = image_tag "logos/user.png"
              = form_for([ad,ad.comments.build]) do |f|
                %p
                  = text_area :comment, :body, :id => "advisetext"
                  /- if current_user.capabilities
                  / %p
                  /   Choose which of your capabilities to include:
                  / %p
                  /   #{current_user.capabilities}
                  / %p
                  /   Any other relevant capabilities?
                  /- else
                  /%p
                  /  Any relevant capabilities?
                  /%p
                  /  = f.text_area :capabilities
                  /%p
                  /  = f.file_field :image, multiple:true
                  /%p
                  /.ui.toggle.checkbox.slideHideToggle
                  /  %input{:name => "public", :type => "checkbox"}/
                  /  %label Agree to #{ad.action_adventure}-seeker's offer
                  /.HideShow
                  /%p
                  /  = f.label :price, 'I would like to get'
                  /  = f.number_field :price, value: ad.price
                  /  instead
                  %button.createcomment
                    POST