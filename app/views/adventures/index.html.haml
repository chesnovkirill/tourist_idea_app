!!!
%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:charset => "utf-8"}/
    %script{:src => "https://code.jquery.com/jquery-3.1.1.min.js"}
    %link{:href => "https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.2/semantic.min.css", :rel => "stylesheet", :type => "text/css"}/
    %script{:src => "https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"}
    %script{:src => "https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.4/semantic.min.js"}


    :javascript
      $(document).ready(function() {
          $('.showHiddenBlock').click(function() {
              $(this).parent().children('.initiallyHiddenBlock').slideToggle();
          });
      });
      $(document).ready(function() {
          $('.showHiddenBlock2').click(function() {
              $(this).parent().children('.initiallyHiddenBlock2').slideToggle();
          });
      });
      $(document).ready(function() {
          $('.slideHideToggle').click(function() {
              $(this).parent().children('.HideShow').slideToggle();
          });
      });
      function myFunction() {
          var input, filter, ul, li, a, i;
          input = document.getElementById("myInput");
          filter = input.value.toUpperCase();
          ul = document.getElementById("myUL");
          li = ul.getElementsByTagName("li");
          for (i = 0; i < li.length; i++) {
              a = li[i].getElementsByTagName("a")[0];
              if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                  li[i].style.display = "";
              } else {
                  li[i].style.display = "none";
              }
          }
      }

      var arr= ["test", "apple", "orange"];
      $('#myInput').autocomplete({
        lookup: arr
      });

    :css
      .initiallyHiddenBlock {
          display: none;
      }
      .initiallyHiddenBlock2 {
          display: none;
      }
      #myInput {
          background-image: url('/css/searchicon.png');
          background-position: 10px 12px;
          background-repeat: no-repeat;
          width: 100%;
          font-size: 16px;
          padding: 12px 20px 12px 40px;
          border: 1px solid #ddd;
          margin-bottom: 12px;
      }
      .a.variable {
        color: #1d4e89;
        clear:left
      }
      .inline {
        color: #1d4e89;
        display: inline;
      }
      .ui.centered.grid.my {
        position: relative;
        top: 30px;
      }

      body {
        background-color: #f0f8ff;
      }
      .new_adventure {
        position: relative;
        left: 200px;
        width: 1000px;
        background-color: #c8cfd6;
        border: 10px solid white;
        padding: 25px;
        margin: 25px;
      }

      .select_box_style {
        font-family: Futura, "Trebuchet MS", Arial, sans-serif;
        -webkit-appearance: none;
        -moz-appearance: none;
        -ms-appearance: none;
        -o-appearance: none;
        text-align: center;
        color: #e7e7e7;
        border: none;
        height: 40px;
        width: 200px;
        background: #325C74;
      }

%body
  .new_adventure
    = form_tag adventures_path, :method => :post do
      %a.variable
        %select.select_box_style{:name => "adventure[action_adventure]"}
          %option{:selected => "selected", :value => ""} Choose Action or  Advise
          %option{:value => "action"} Action
          %option{:value => "advice"} Advise
      %a.variable
        %select.select_box_style{:name => "adventure[number_of_people]"}
          %option{:selected => "selected", :value => ""} How Many People?
          %option{:value => "Only me"} Only me
          %option{:value => "+1"} Me +1
          %option{:value => "+2"} Me +2
          %option{:value => "+3"} Me +3
          %option{:value => "+4"} Me +4
          %option{:value => "+5"} Me +5
          %option{:value => "me and more than 5 others"} Me and more than 5 others



      %a.variable
        = select :adventure, :country, @countries
      %p
      %a.variable
        = text_field :adventure, :city, :placeholder => 'Destination City'
        = label :adventure, :adventure_date, 'choose date'
      %a.variable
        = date_select :adventure, :adventure_date, :start_year => Date.today.year
      %p
        = label :adventure, :description, 'Ask locals anything'
      .ui.form
        .field
          #{text_area :adventure, :description}
      %p
        = label :adventure, :description, 'Any details?'
      .ui.form
        .field
          #{text_area :adventure, :details}
          = hidden_field :adventure, :completed, value: false
      %p
      .ui.two.column.grid
        .column
          .left.aligned.column
            %h1
              = label :adventure, :price, 'I am willing to offer:'
      .ui.two.column.centered.grid
        .column
        .column
          .ui.form
            .sixteen.wide.field
              #{number_field :adventure, :price, value: 0}
      %p
      %button.ui.inverted.teal.button Save Changes

.ui.centered.grid.my
  .ten.wide.column
    .ui.centered.items
      %h2 All Adventures
      .ui.segments
        - @adventures.sort {|a,b| b.created_at <=> a.created_at }.each do |ad|
          #myUL
          .twenty.wide.item
            .ui.segment
              .content
              .meta
              .eight.wide.column
                - if ad.user.first_name
                  #{link_to "#{ad.user.first_name}", user_path(ad.user.id)} needs #{ad.action_adventure}
                - else
                  #{link_to "Anon", user_path(ad.user.id)} needs #{ad.action_adventure}
                %p
                - if ad.user.avatar_url.to_s != ''
                  %a.img.ui.small.circular.image{:href => user_path(ad.user.id)}
                    %img{:src => ad.user.avatar_url.to_s}/
                %p Number of people: #{ad.number_of_people}
                - if ad.city != ""
                  %p #{ad.city},  #{ad.country} on #{ad.adventure_date.strftime("%B %d, %Y")}
                - else
                  %p Any city in #{ad.country} on #{ad.adventure_date.strftime("%B %d, %Y")}
                %p
                  #{ad.description}
                - if ad.details != ""
                  %button.ui.inverted.blue.button.toggle-btn.showHiddenBlock{:type => "button"} Details
                  %p
                  .initiallyHiddenBlock
                    %h2 Details
                    %p
                    #{ad.details}
                %p
                - if ad.price != 0
                  - if ad.user.first_name
                    #{ad.user.first_name}'s offer: $#{ad.price}
                  - else
                    Anon's offer: $#{ad.price}
                - else
                  - if ad.user.first_name
                    #{ad.user.first_name} would like to get this #{ad.action_adventure} for free
                  - else
                    Anon would like to get this #{ad.action_adventure} for free
                %p
                - if user_signed_in? && ad.completed != true
                  - if ad.user.id == current_user.id
                    #{link_to '<i class="big olive write icon"></i>'.html_safe, edit_adventure_path(ad)}
                    #{link_to '<i class="big olive trash outline icon"></i>'.html_safe, adventure_path(ad), :method => :delete}
                %h4
                  Created
                  = time_ago_in_words(ad.created_at)
                  ago, on
                  = ad.created_at.strftime("%D")
                %br/
                = ad.comments.count
                answer(s)
                %p
                - if ad.comments.count > 0
                  %button.fluid.ui.inverted.blue.button.toggle-btn.showHiddenBlock2{:type => "button"} Comments
                  %p
                  .initiallyHiddenBlock2
                    %p
                    - ad.comments.each do |c|
                      .ui.very.padded.segment
                        %p
                          = render c
                - if user_signed_in?
                  - if ad.user.id != current_user.id && ad.comments.find_by(:user_id =>current_user.id) == nil && ad.completed != true
                    Answer:
                    = form_for([ad,ad.comments.build]) do |f|
                      %p
                        #{current_user.first_name}
                      %p
                        = f.text_area :body
                      - if current_user.capabilities
                        %p
                          Choose which of your capabilities to include:
                        %p
                          #{current_user.capabilities}
                        %p
                          Any other relevant capabilities?
                      - else
                        Any relevant capabilities?
                        %p
                        = f.text_area :capabilities
                      %p
                        = f.file_field :image, multiple:true
                      %p
                        .ui.toggle.checkbox.slideHideToggle
                          %input{:name => "public", :type => "checkbox"}/
                          %label Agree to #{ad.action_adventure}-seeker's offer
                      .HideShow
                        %p
                          = f.label :price, 'I would like to get'
                          = f.number_field :price, value: ad.price
                          instead
                      %p
                      %p
                        %button.ui.blue.button Create Comment
